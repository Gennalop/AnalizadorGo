Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COLON
    CONST
    CONTINUE
    DEFAULT
    DEFER
    ELSE
    FALLTHROUGH
    FUNC
    GO
    IF
    IMPORT
    INTERFACE
    LBRACKET
    MAP
    PACKAGE
    RANGE
    RBRACKET
    RETURN
    SELECT
    STRING_UNCLOSE
    SWITCH

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> struct_definition
Rule 5     declaration -> print_statement
Rule 6     sentencias -> sentencia
Rule 7     sentencias -> sentencia sentencias
Rule 8     sentencia -> assignment
Rule 9     sentencia -> input
Rule 10    sentencia -> llamarFuncion
Rule 11    sentencia -> print_statement
Rule 12    input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
Rule 13    assignment -> assigmentSimple
Rule 14    assignment -> assignmentFuncion
Rule 15    assignment -> shortAssignment
Rule 16    shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression
Rule 17    assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression
Rule 18    assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion
Rule 19    llamarFuncion -> IDENTIFIER LPAREN argumentos_opt RPAREN
Rule 20    argumentos_opt -> argumentos
Rule 21    argumentos_opt -> empty
Rule 22    argumentos -> expression
Rule 23    argumentos -> expression COMMA argumentos
Rule 24    condicion -> expression comparador expression
Rule 25    condicion_compleja -> condicion operadorLogico condicion
Rule 26    condicion_compleja -> condicion operadorLogico condicion_compleja
Rule 27    operadorLogico -> AND
Rule 28    operadorLogico -> OR
Rule 29    comparador -> EQ
Rule 30    comparador -> NEQ
Rule 31    comparador -> GT
Rule 32    comparador -> LT
Rule 33    comparador -> GE
Rule 34    comparador -> LE
Rule 35    empty -> <empty>
Rule 36    print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN
Rule 37    struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
Rule 38    struct_field -> IDENTIFIER DATATYPE
Rule 39    struct_fields -> struct_field
Rule 40    struct_fields -> struct_fields struct_field
Rule 41    for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
Rule 42    for_statement -> FOR condicion block
Rule 43    for_statement -> FOR block
Rule 44    block -> LBRACE sentencias RBRACE
Rule 45    block -> LBRACE RBRACE
Rule 46    expression_binary -> expression PLUS expression
Rule 47    expression_binary -> expression MINUS expression
Rule 48    expression_binary -> expression TIMES expression
Rule 49    expression_binary -> expression DIVIDE expression
Rule 50    expression_binary -> expression MOD expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> value
Rule 54    value -> IDENTIFIER
Rule 55    value -> NUMBER
Rule 56    value -> RUNE
Rule 57    value -> STRING
Rule 58    value -> RAW_STRING
Rule 59    value -> TRUE
Rule 60    value -> FALSE
Rule 61    value -> NIL

Terminals, with rules where they appear

AMPERSAND            : 12
AND                  : 27
ASSIGN               : 17 18
BREAK                : 
CASE                 : 
COLON                : 
COMMA                : 23
CONST                : 
CONTINUE             : 
DATATYPE             : 17 18 38
DECLARE_ASSIGN       : 16
DEFAULT              : 
DEFER                : 
DIVIDE               : 49
DOT                  : 12 36
ELSE                 : 
EQ                   : 29
FALLTHROUGH          : 
FALSE                : 60
FOR                  : 41 42 43
FUNC                 : 
GE                   : 33
GO                   : 
GT                   : 31
IDENTIFIER           : 12 12 12 16 17 18 19 36 36 37 38 54
IF                   : 
IMPORT               : 
INTERFACE            : 
LBRACE               : 37 44 45
LBRACKET             : 
LE                   : 34
LPAREN               : 12 19 36 52
LT                   : 32
MAP                  : 
MINUS                : 47 51
MOD                  : 50
NEQ                  : 30
NIL                  : 61
NUMBER               : 55
OR                   : 28
PACKAGE              : 
PLUS                 : 46
RANGE                : 
RAW_STRING           : 58
RBRACE               : 37 44 45
RBRACKET             : 
RETURN               : 
RPAREN               : 12 19 36 52
RUNE                 : 56
SELECT               : 
SEMICOLON            : 41 41
STRING               : 57
STRING_UNCLOSE       : 
STRUCT               : 37
SWITCH               : 
TIMES                : 48
TRUE                 : 59
TYPE                 : 37
VAR                  : 17 18
error                : 

Nonterminals, with rules where they appear

argumentos           : 20 23
argumentos_opt       : 19 36
assigmentSimple      : 13
assignment           : 8
assignmentFuncion    : 14
block                : 41 42 43
comparador           : 24
condicion            : 25 25 26 41 42
condicion_compleja   : 26
declaration          : 2 3
declaration_list     : 1 3
empty                : 21
expression           : 16 17 22 23 24 24 41 46 46 47 47 48 48 49 49 50 50 51 52
expression_binary    : 
for_statement        : 
input                : 9
llamarFuncion        : 10 18
operadorLogico       : 25 26
print_statement      : 5 11
program              : 0
sentencia            : 6 7
sentencias           : 7 44
shortAssignment      : 15 41
struct_definition    : 4
struct_field         : 39 40
struct_fields        : 37 40
value                : 53

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . struct_definition
    (5) declaration -> . print_statement
    (37) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (36) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN

    TYPE            shift and go to state 6
    IDENTIFIER      shift and go to state 7

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    struct_definition              shift and go to state 4
    print_statement                shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . struct_definition
    (5) declaration -> . print_statement
    (37) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (36) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN

    $end            reduce using rule 1 (program -> declaration_list .)
    TYPE            shift and go to state 6
    IDENTIFIER      shift and go to state 7

    declaration                    shift and go to state 8
    struct_definition              shift and go to state 4
    print_statement                shift and go to state 5

state 3

    (2) declaration_list -> declaration .

    TYPE            reduce using rule 2 (declaration_list -> declaration .)
    IDENTIFIER      reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> struct_definition .

    TYPE            reduce using rule 4 (declaration -> struct_definition .)
    IDENTIFIER      reduce using rule 4 (declaration -> struct_definition .)
    $end            reduce using rule 4 (declaration -> struct_definition .)


state 5

    (5) declaration -> print_statement .

    TYPE            reduce using rule 5 (declaration -> print_statement .)
    IDENTIFIER      reduce using rule 5 (declaration -> print_statement .)
    $end            reduce using rule 5 (declaration -> print_statement .)


state 6

    (37) struct_definition -> TYPE . IDENTIFIER STRUCT LBRACE struct_fields RBRACE

    IDENTIFIER      shift and go to state 9


state 7

    (36) print_statement -> IDENTIFIER . DOT IDENTIFIER LPAREN argumentos_opt RPAREN

    DOT             shift and go to state 10


state 8

    (3) declaration_list -> declaration_list declaration .

    TYPE            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IDENTIFIER      reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 9

    (37) struct_definition -> TYPE IDENTIFIER . STRUCT LBRACE struct_fields RBRACE

    STRUCT          shift and go to state 11


state 10

    (36) print_statement -> IDENTIFIER DOT . IDENTIFIER LPAREN argumentos_opt RPAREN

    IDENTIFIER      shift and go to state 12


state 11

    (37) struct_definition -> TYPE IDENTIFIER STRUCT . LBRACE struct_fields RBRACE

    LBRACE          shift and go to state 13


state 12

    (36) print_statement -> IDENTIFIER DOT IDENTIFIER . LPAREN argumentos_opt RPAREN

    LPAREN          shift and go to state 14


state 13

    (37) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE . struct_fields RBRACE
    (39) struct_fields -> . struct_field
    (40) struct_fields -> . struct_fields struct_field
    (38) struct_field -> . IDENTIFIER DATATYPE

    IDENTIFIER      shift and go to state 15

    struct_fields                  shift and go to state 16
    struct_field                   shift and go to state 17

state 14

    (36) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN . argumentos_opt RPAREN
    (20) argumentos_opt -> . argumentos
    (21) argumentos_opt -> . empty
    (22) argumentos -> . expression
    (23) argumentos -> . expression COMMA argumentos
    (35) empty -> .
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . value
    (54) value -> . IDENTIFIER
    (55) value -> . NUMBER
    (56) value -> . RUNE
    (57) value -> . STRING
    (58) value -> . RAW_STRING
    (59) value -> . TRUE
    (60) value -> . FALSE
    (61) value -> . NIL

    RPAREN          reduce using rule 35 (empty -> .)
    MINUS           shift and go to state 24
    LPAREN          shift and go to state 19
    IDENTIFIER      shift and go to state 18
    NUMBER          shift and go to state 26
    RUNE            shift and go to state 27
    STRING          shift and go to state 28
    RAW_STRING      shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32

    argumentos_opt                 shift and go to state 20
    argumentos                     shift and go to state 21
    empty                          shift and go to state 22
    expression                     shift and go to state 23
    value                          shift and go to state 25

state 15

    (38) struct_field -> IDENTIFIER . DATATYPE

    DATATYPE        shift and go to state 33


state 16

    (37) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields . RBRACE
    (40) struct_fields -> struct_fields . struct_field
    (38) struct_field -> . IDENTIFIER DATATYPE

    RBRACE          shift and go to state 34
    IDENTIFIER      shift and go to state 15

    struct_field                   shift and go to state 35

state 17

    (39) struct_fields -> struct_field .

    RBRACE          reduce using rule 39 (struct_fields -> struct_field .)
    IDENTIFIER      reduce using rule 39 (struct_fields -> struct_field .)


state 18

    (54) value -> IDENTIFIER .

    COMMA           reduce using rule 54 (value -> IDENTIFIER .)
    RPAREN          reduce using rule 54 (value -> IDENTIFIER .)


state 19

    (52) expression -> LPAREN . expression RPAREN
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . value
    (54) value -> . IDENTIFIER
    (55) value -> . NUMBER
    (56) value -> . RUNE
    (57) value -> . STRING
    (58) value -> . RAW_STRING
    (59) value -> . TRUE
    (60) value -> . FALSE
    (61) value -> . NIL

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 19
    IDENTIFIER      shift and go to state 18
    NUMBER          shift and go to state 26
    RUNE            shift and go to state 27
    STRING          shift and go to state 28
    RAW_STRING      shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32

    expression                     shift and go to state 36
    value                          shift and go to state 25

state 20

    (36) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt . RPAREN

    RPAREN          shift and go to state 37


state 21

    (20) argumentos_opt -> argumentos .

    RPAREN          reduce using rule 20 (argumentos_opt -> argumentos .)


state 22

    (21) argumentos_opt -> empty .

    RPAREN          reduce using rule 21 (argumentos_opt -> empty .)


state 23

    (22) argumentos -> expression .
    (23) argumentos -> expression . COMMA argumentos

    RPAREN          reduce using rule 22 (argumentos -> expression .)
    COMMA           shift and go to state 38


state 24

    (51) expression -> MINUS . expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . value
    (54) value -> . IDENTIFIER
    (55) value -> . NUMBER
    (56) value -> . RUNE
    (57) value -> . STRING
    (58) value -> . RAW_STRING
    (59) value -> . TRUE
    (60) value -> . FALSE
    (61) value -> . NIL

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 19
    IDENTIFIER      shift and go to state 18
    NUMBER          shift and go to state 26
    RUNE            shift and go to state 27
    STRING          shift and go to state 28
    RAW_STRING      shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32

    expression                     shift and go to state 39
    value                          shift and go to state 25

state 25

    (53) expression -> value .

    COMMA           reduce using rule 53 (expression -> value .)
    RPAREN          reduce using rule 53 (expression -> value .)


state 26

    (55) value -> NUMBER .

    COMMA           reduce using rule 55 (value -> NUMBER .)
    RPAREN          reduce using rule 55 (value -> NUMBER .)


state 27

    (56) value -> RUNE .

    COMMA           reduce using rule 56 (value -> RUNE .)
    RPAREN          reduce using rule 56 (value -> RUNE .)


state 28

    (57) value -> STRING .

    COMMA           reduce using rule 57 (value -> STRING .)
    RPAREN          reduce using rule 57 (value -> STRING .)


state 29

    (58) value -> RAW_STRING .

    COMMA           reduce using rule 58 (value -> RAW_STRING .)
    RPAREN          reduce using rule 58 (value -> RAW_STRING .)


state 30

    (59) value -> TRUE .

    COMMA           reduce using rule 59 (value -> TRUE .)
    RPAREN          reduce using rule 59 (value -> TRUE .)


state 31

    (60) value -> FALSE .

    COMMA           reduce using rule 60 (value -> FALSE .)
    RPAREN          reduce using rule 60 (value -> FALSE .)


state 32

    (61) value -> NIL .

    COMMA           reduce using rule 61 (value -> NIL .)
    RPAREN          reduce using rule 61 (value -> NIL .)


state 33

    (38) struct_field -> IDENTIFIER DATATYPE .

    RBRACE          reduce using rule 38 (struct_field -> IDENTIFIER DATATYPE .)
    IDENTIFIER      reduce using rule 38 (struct_field -> IDENTIFIER DATATYPE .)


state 34

    (37) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .

    TYPE            reduce using rule 37 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    IDENTIFIER      reduce using rule 37 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    $end            reduce using rule 37 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)


state 35

    (40) struct_fields -> struct_fields struct_field .

    RBRACE          reduce using rule 40 (struct_fields -> struct_fields struct_field .)
    IDENTIFIER      reduce using rule 40 (struct_fields -> struct_fields struct_field .)


state 36

    (52) expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 40


state 37

    (36) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN .

    TYPE            reduce using rule 36 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN .)
    IDENTIFIER      reduce using rule 36 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN .)
    $end            reduce using rule 36 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argumentos_opt RPAREN .)


state 38

    (23) argumentos -> expression COMMA . argumentos
    (22) argumentos -> . expression
    (23) argumentos -> . expression COMMA argumentos
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . value
    (54) value -> . IDENTIFIER
    (55) value -> . NUMBER
    (56) value -> . RUNE
    (57) value -> . STRING
    (58) value -> . RAW_STRING
    (59) value -> . TRUE
    (60) value -> . FALSE
    (61) value -> . NIL

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 19
    IDENTIFIER      shift and go to state 18
    NUMBER          shift and go to state 26
    RUNE            shift and go to state 27
    STRING          shift and go to state 28
    RAW_STRING      shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32

    expression                     shift and go to state 23
    argumentos                     shift and go to state 41
    value                          shift and go to state 25

state 39

    (51) expression -> MINUS expression .

    COMMA           reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)


state 40

    (52) expression -> LPAREN expression RPAREN .

    COMMA           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (expression -> LPAREN expression RPAREN .)


state 41

    (23) argumentos -> expression COMMA argumentos .

    RPAREN          reduce using rule 23 (argumentos -> expression COMMA argumentos .)

