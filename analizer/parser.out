Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COLON
    CONST
    CONTINUE
    DEFAULT
    DEFER
    ELSE
    FALLTHROUGH
    FUNC
    GO
    IF
    IMPORT
    INTERFACE
    LBRACKET
    MAP
    PACKAGE
    RANGE
    RBRACKET
    RETURN
    SELECT
    STRING_UNCLOSE
    SWITCH

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> struct_definition
Rule 5     declaration -> print_statement
Rule 6     declaration -> for_statement
Rule 7     sentencias -> sentencia
Rule 8     sentencias -> sentencia sentencias
Rule 9     sentencia -> assignment
Rule 10    sentencia -> input
Rule 11    sentencia -> llamarFuncion
Rule 12    sentencia -> print_statement
Rule 13    sentencia -> struct_definition
Rule 14    sentencia -> for_statement
Rule 15    input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
Rule 16    assignment -> assigmentSimple
Rule 17    assignment -> assignmentFuncion
Rule 18    assignment -> shortAssignment
Rule 19    shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression
Rule 20    assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression
Rule 21    assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion
Rule 22    llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN
Rule 23    argument_list -> expression
Rule 24    argument_list -> argument_list COMMA expression
Rule 25    argument_list_opt -> argument_list
Rule 26    argument_list_opt -> <empty>
Rule 27    condicion -> expression comparador expression
Rule 28    condicion_compleja -> condicion operadorLogico condicion
Rule 29    condicion_compleja -> condicion operadorLogico condicion_compleja
Rule 30    operadorLogico -> AND
Rule 31    operadorLogico -> OR
Rule 32    comparador -> EQ
Rule 33    comparador -> NEQ
Rule 34    comparador -> GT
Rule 35    comparador -> LT
Rule 36    comparador -> GE
Rule 37    comparador -> LE
Rule 38    empty -> <empty>
Rule 39    print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN
Rule 40    struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
Rule 41    struct_field -> IDENTIFIER DATATYPE
Rule 42    struct_fields -> struct_field
Rule 43    struct_fields -> struct_fields struct_field
Rule 44    for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
Rule 45    for_statement -> FOR condicion block
Rule 46    for_statement -> FOR block
Rule 47    block -> LBRACE sentencias RBRACE
Rule 48    block -> LBRACE RBRACE
Rule 49    expression -> NUMBER
Rule 50    expression -> IDENTIFIER
Rule 51    expression -> RUNE
Rule 52    expression -> STRING
Rule 53    expression -> RAW_STRING
Rule 54    expression -> TRUE
Rule 55    expression -> FALSE
Rule 56    expression -> NIL
Rule 57    expression -> expression PLUS expression
Rule 58    expression -> expression MINUS expression
Rule 59    expression -> expression TIMES expression
Rule 60    expression -> expression DIVIDE expression
Rule 61    expression -> expression MOD expression
Rule 62    expression -> MINUS expression
Rule 63    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

AMPERSAND            : 15
AND                  : 30
ASSIGN               : 20 21
BREAK                : 
CASE                 : 
COLON                : 
COMMA                : 24
CONST                : 
CONTINUE             : 
DATATYPE             : 20 21 41
DECLARE_ASSIGN       : 19
DEFAULT              : 
DEFER                : 
DIVIDE               : 60
DOT                  : 15 39
ELSE                 : 
EQ                   : 32
FALLTHROUGH          : 
FALSE                : 55
FOR                  : 44 45 46
FUNC                 : 
GE                   : 36
GO                   : 
GT                   : 34
IDENTIFIER           : 15 15 15 19 20 21 22 39 39 40 41 50
IF                   : 
IMPORT               : 
INTERFACE            : 
LBRACE               : 40 47 48
LBRACKET             : 
LE                   : 37
LPAREN               : 15 22 39 63
LT                   : 35
MAP                  : 
MINUS                : 58 62
MOD                  : 61
NEQ                  : 33
NIL                  : 56
NUMBER               : 49
OR                   : 31
PACKAGE              : 
PLUS                 : 57
RANGE                : 
RAW_STRING           : 53
RBRACE               : 40 47 48
RBRACKET             : 
RETURN               : 
RPAREN               : 15 22 39 63
RUNE                 : 51
SELECT               : 
SEMICOLON            : 44 44
STRING               : 52
STRING_UNCLOSE       : 
STRUCT               : 40
SWITCH               : 
TIMES                : 59
TRUE                 : 54
TYPE                 : 40
VAR                  : 20 21
error                : 

Nonterminals, with rules where they appear

argument_list        : 24 25
argument_list_opt    : 22 39
assigmentSimple      : 16
assignment           : 9
assignmentFuncion    : 17
block                : 44 45 46
comparador           : 27
condicion            : 28 28 29 44 45
condicion_compleja   : 29
declaration          : 2 3
declaration_list     : 1 3
empty                : 
expression           : 19 20 23 24 27 27 44 57 57 58 58 59 59 60 60 61 61 62 63
for_statement        : 6 14
input                : 10
llamarFuncion        : 11 21
operadorLogico       : 28 29
print_statement      : 5 12
program              : 0
sentencia            : 7 8
sentencias           : 8 47
shortAssignment      : 18 44
struct_definition    : 4 13
struct_field         : 42 43
struct_fields        : 40 43

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . struct_definition
    (5) declaration -> . print_statement
    (6) declaration -> . for_statement
    (40) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (39) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN
    (44) for_statement -> . FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
    (45) for_statement -> . FOR condicion block
    (46) for_statement -> . FOR block

    TYPE            shift and go to state 7
    IDENTIFIER      shift and go to state 8
    FOR             shift and go to state 9

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    struct_definition              shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . struct_definition
    (5) declaration -> . print_statement
    (6) declaration -> . for_statement
    (40) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (39) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN
    (44) for_statement -> . FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
    (45) for_statement -> . FOR condicion block
    (46) for_statement -> . FOR block

    $end            reduce using rule 1 (program -> declaration_list .)
    TYPE            shift and go to state 7
    IDENTIFIER      shift and go to state 8
    FOR             shift and go to state 9

    declaration                    shift and go to state 10
    struct_definition              shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6

state 3

    (2) declaration_list -> declaration .

    TYPE            reduce using rule 2 (declaration_list -> declaration .)
    IDENTIFIER      reduce using rule 2 (declaration_list -> declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> struct_definition .

    TYPE            reduce using rule 4 (declaration -> struct_definition .)
    IDENTIFIER      reduce using rule 4 (declaration -> struct_definition .)
    FOR             reduce using rule 4 (declaration -> struct_definition .)
    $end            reduce using rule 4 (declaration -> struct_definition .)


state 5

    (5) declaration -> print_statement .

    TYPE            reduce using rule 5 (declaration -> print_statement .)
    IDENTIFIER      reduce using rule 5 (declaration -> print_statement .)
    FOR             reduce using rule 5 (declaration -> print_statement .)
    $end            reduce using rule 5 (declaration -> print_statement .)


state 6

    (6) declaration -> for_statement .

    TYPE            reduce using rule 6 (declaration -> for_statement .)
    IDENTIFIER      reduce using rule 6 (declaration -> for_statement .)
    FOR             reduce using rule 6 (declaration -> for_statement .)
    $end            reduce using rule 6 (declaration -> for_statement .)


state 7

    (40) struct_definition -> TYPE . IDENTIFIER STRUCT LBRACE struct_fields RBRACE

    IDENTIFIER      shift and go to state 11


state 8

    (39) print_statement -> IDENTIFIER . DOT IDENTIFIER LPAREN argument_list_opt RPAREN

    DOT             shift and go to state 12


state 9

    (44) for_statement -> FOR . shortAssignment SEMICOLON condicion SEMICOLON expression block
    (45) for_statement -> FOR . condicion block
    (46) for_statement -> FOR . block
    (19) shortAssignment -> . IDENTIFIER DECLARE_ASSIGN expression
    (27) condicion -> . expression comparador expression
    (47) block -> . LBRACE sentencias RBRACE
    (48) block -> . LBRACE RBRACE
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 17
    LBRACE          shift and go to state 18
    NUMBER          shift and go to state 19
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    shortAssignment                shift and go to state 13
    condicion                      shift and go to state 14
    expression                     shift and go to state 15
    block                          shift and go to state 16

state 10

    (3) declaration_list -> declaration_list declaration .

    TYPE            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IDENTIFIER      reduce using rule 3 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 11

    (40) struct_definition -> TYPE IDENTIFIER . STRUCT LBRACE struct_fields RBRACE

    STRUCT          shift and go to state 28


state 12

    (39) print_statement -> IDENTIFIER DOT . IDENTIFIER LPAREN argument_list_opt RPAREN

    IDENTIFIER      shift and go to state 29


state 13

    (44) for_statement -> FOR shortAssignment . SEMICOLON condicion SEMICOLON expression block

    SEMICOLON       shift and go to state 30


state 14

    (45) for_statement -> FOR condicion . block
    (47) block -> . LBRACE sentencias RBRACE
    (48) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 18

    block                          shift and go to state 31

state 15

    (27) condicion -> expression . comparador expression
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression
    (32) comparador -> . EQ
    (33) comparador -> . NEQ
    (34) comparador -> . GT
    (35) comparador -> . LT
    (36) comparador -> . GE
    (37) comparador -> . LE

    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43

    comparador                     shift and go to state 32

state 16

    (46) for_statement -> FOR block .

    TYPE            reduce using rule 46 (for_statement -> FOR block .)
    IDENTIFIER      reduce using rule 46 (for_statement -> FOR block .)
    FOR             reduce using rule 46 (for_statement -> FOR block .)
    $end            reduce using rule 46 (for_statement -> FOR block .)
    VAR             reduce using rule 46 (for_statement -> FOR block .)
    RBRACE          reduce using rule 46 (for_statement -> FOR block .)


state 17

    (19) shortAssignment -> IDENTIFIER . DECLARE_ASSIGN expression
    (50) expression -> IDENTIFIER .

    DECLARE_ASSIGN  shift and go to state 44
    PLUS            reduce using rule 50 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 50 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 50 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 50 (expression -> IDENTIFIER .)
    MOD             reduce using rule 50 (expression -> IDENTIFIER .)
    EQ              reduce using rule 50 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 50 (expression -> IDENTIFIER .)
    GT              reduce using rule 50 (expression -> IDENTIFIER .)
    LT              reduce using rule 50 (expression -> IDENTIFIER .)
    GE              reduce using rule 50 (expression -> IDENTIFIER .)
    LE              reduce using rule 50 (expression -> IDENTIFIER .)


state 18

    (47) block -> LBRACE . sentencias RBRACE
    (48) block -> LBRACE . RBRACE
    (7) sentencias -> . sentencia
    (8) sentencias -> . sentencia sentencias
    (9) sentencia -> . assignment
    (10) sentencia -> . input
    (11) sentencia -> . llamarFuncion
    (12) sentencia -> . print_statement
    (13) sentencia -> . struct_definition
    (14) sentencia -> . for_statement
    (16) assignment -> . assigmentSimple
    (17) assignment -> . assignmentFuncion
    (18) assignment -> . shortAssignment
    (15) input -> . IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
    (22) llamarFuncion -> . IDENTIFIER LPAREN argument_list_opt RPAREN
    (39) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN
    (40) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (44) for_statement -> . FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
    (45) for_statement -> . FOR condicion block
    (46) for_statement -> . FOR block
    (20) assigmentSimple -> . VAR IDENTIFIER DATATYPE ASSIGN expression
    (21) assignmentFuncion -> . VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion
    (19) shortAssignment -> . IDENTIFIER DECLARE_ASSIGN expression

    RBRACE          shift and go to state 46
    IDENTIFIER      shift and go to state 57
    TYPE            shift and go to state 7
    FOR             shift and go to state 9
    VAR             shift and go to state 58

    sentencias                     shift and go to state 45
    sentencia                      shift and go to state 47
    assignment                     shift and go to state 48
    input                          shift and go to state 49
    llamarFuncion                  shift and go to state 50
    print_statement                shift and go to state 51
    struct_definition              shift and go to state 52
    for_statement                  shift and go to state 53
    assigmentSimple                shift and go to state 54
    assignmentFuncion              shift and go to state 55
    shortAssignment                shift and go to state 56

state 19

    (49) expression -> NUMBER .

    PLUS            reduce using rule 49 (expression -> NUMBER .)
    MINUS           reduce using rule 49 (expression -> NUMBER .)
    TIMES           reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    MOD             reduce using rule 49 (expression -> NUMBER .)
    EQ              reduce using rule 49 (expression -> NUMBER .)
    NEQ             reduce using rule 49 (expression -> NUMBER .)
    GT              reduce using rule 49 (expression -> NUMBER .)
    LT              reduce using rule 49 (expression -> NUMBER .)
    GE              reduce using rule 49 (expression -> NUMBER .)
    LE              reduce using rule 49 (expression -> NUMBER .)
    RPAREN          reduce using rule 49 (expression -> NUMBER .)
    LBRACE          reduce using rule 49 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 49 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 49 (expression -> NUMBER .)
    TYPE            reduce using rule 49 (expression -> NUMBER .)
    FOR             reduce using rule 49 (expression -> NUMBER .)
    VAR             reduce using rule 49 (expression -> NUMBER .)
    RBRACE          reduce using rule 49 (expression -> NUMBER .)
    COMMA           reduce using rule 49 (expression -> NUMBER .)


state 20

    (51) expression -> RUNE .

    PLUS            reduce using rule 51 (expression -> RUNE .)
    MINUS           reduce using rule 51 (expression -> RUNE .)
    TIMES           reduce using rule 51 (expression -> RUNE .)
    DIVIDE          reduce using rule 51 (expression -> RUNE .)
    MOD             reduce using rule 51 (expression -> RUNE .)
    EQ              reduce using rule 51 (expression -> RUNE .)
    NEQ             reduce using rule 51 (expression -> RUNE .)
    GT              reduce using rule 51 (expression -> RUNE .)
    LT              reduce using rule 51 (expression -> RUNE .)
    GE              reduce using rule 51 (expression -> RUNE .)
    LE              reduce using rule 51 (expression -> RUNE .)
    RPAREN          reduce using rule 51 (expression -> RUNE .)
    LBRACE          reduce using rule 51 (expression -> RUNE .)
    SEMICOLON       reduce using rule 51 (expression -> RUNE .)
    IDENTIFIER      reduce using rule 51 (expression -> RUNE .)
    TYPE            reduce using rule 51 (expression -> RUNE .)
    FOR             reduce using rule 51 (expression -> RUNE .)
    VAR             reduce using rule 51 (expression -> RUNE .)
    RBRACE          reduce using rule 51 (expression -> RUNE .)
    COMMA           reduce using rule 51 (expression -> RUNE .)


state 21

    (52) expression -> STRING .

    PLUS            reduce using rule 52 (expression -> STRING .)
    MINUS           reduce using rule 52 (expression -> STRING .)
    TIMES           reduce using rule 52 (expression -> STRING .)
    DIVIDE          reduce using rule 52 (expression -> STRING .)
    MOD             reduce using rule 52 (expression -> STRING .)
    EQ              reduce using rule 52 (expression -> STRING .)
    NEQ             reduce using rule 52 (expression -> STRING .)
    GT              reduce using rule 52 (expression -> STRING .)
    LT              reduce using rule 52 (expression -> STRING .)
    GE              reduce using rule 52 (expression -> STRING .)
    LE              reduce using rule 52 (expression -> STRING .)
    RPAREN          reduce using rule 52 (expression -> STRING .)
    LBRACE          reduce using rule 52 (expression -> STRING .)
    SEMICOLON       reduce using rule 52 (expression -> STRING .)
    IDENTIFIER      reduce using rule 52 (expression -> STRING .)
    TYPE            reduce using rule 52 (expression -> STRING .)
    FOR             reduce using rule 52 (expression -> STRING .)
    VAR             reduce using rule 52 (expression -> STRING .)
    RBRACE          reduce using rule 52 (expression -> STRING .)
    COMMA           reduce using rule 52 (expression -> STRING .)


state 22

    (53) expression -> RAW_STRING .

    PLUS            reduce using rule 53 (expression -> RAW_STRING .)
    MINUS           reduce using rule 53 (expression -> RAW_STRING .)
    TIMES           reduce using rule 53 (expression -> RAW_STRING .)
    DIVIDE          reduce using rule 53 (expression -> RAW_STRING .)
    MOD             reduce using rule 53 (expression -> RAW_STRING .)
    EQ              reduce using rule 53 (expression -> RAW_STRING .)
    NEQ             reduce using rule 53 (expression -> RAW_STRING .)
    GT              reduce using rule 53 (expression -> RAW_STRING .)
    LT              reduce using rule 53 (expression -> RAW_STRING .)
    GE              reduce using rule 53 (expression -> RAW_STRING .)
    LE              reduce using rule 53 (expression -> RAW_STRING .)
    RPAREN          reduce using rule 53 (expression -> RAW_STRING .)
    LBRACE          reduce using rule 53 (expression -> RAW_STRING .)
    SEMICOLON       reduce using rule 53 (expression -> RAW_STRING .)
    IDENTIFIER      reduce using rule 53 (expression -> RAW_STRING .)
    TYPE            reduce using rule 53 (expression -> RAW_STRING .)
    FOR             reduce using rule 53 (expression -> RAW_STRING .)
    VAR             reduce using rule 53 (expression -> RAW_STRING .)
    RBRACE          reduce using rule 53 (expression -> RAW_STRING .)
    COMMA           reduce using rule 53 (expression -> RAW_STRING .)


state 23

    (54) expression -> TRUE .

    PLUS            reduce using rule 54 (expression -> TRUE .)
    MINUS           reduce using rule 54 (expression -> TRUE .)
    TIMES           reduce using rule 54 (expression -> TRUE .)
    DIVIDE          reduce using rule 54 (expression -> TRUE .)
    MOD             reduce using rule 54 (expression -> TRUE .)
    EQ              reduce using rule 54 (expression -> TRUE .)
    NEQ             reduce using rule 54 (expression -> TRUE .)
    GT              reduce using rule 54 (expression -> TRUE .)
    LT              reduce using rule 54 (expression -> TRUE .)
    GE              reduce using rule 54 (expression -> TRUE .)
    LE              reduce using rule 54 (expression -> TRUE .)
    RPAREN          reduce using rule 54 (expression -> TRUE .)
    LBRACE          reduce using rule 54 (expression -> TRUE .)
    SEMICOLON       reduce using rule 54 (expression -> TRUE .)
    IDENTIFIER      reduce using rule 54 (expression -> TRUE .)
    TYPE            reduce using rule 54 (expression -> TRUE .)
    FOR             reduce using rule 54 (expression -> TRUE .)
    VAR             reduce using rule 54 (expression -> TRUE .)
    RBRACE          reduce using rule 54 (expression -> TRUE .)
    COMMA           reduce using rule 54 (expression -> TRUE .)


state 24

    (55) expression -> FALSE .

    PLUS            reduce using rule 55 (expression -> FALSE .)
    MINUS           reduce using rule 55 (expression -> FALSE .)
    TIMES           reduce using rule 55 (expression -> FALSE .)
    DIVIDE          reduce using rule 55 (expression -> FALSE .)
    MOD             reduce using rule 55 (expression -> FALSE .)
    EQ              reduce using rule 55 (expression -> FALSE .)
    NEQ             reduce using rule 55 (expression -> FALSE .)
    GT              reduce using rule 55 (expression -> FALSE .)
    LT              reduce using rule 55 (expression -> FALSE .)
    GE              reduce using rule 55 (expression -> FALSE .)
    LE              reduce using rule 55 (expression -> FALSE .)
    RPAREN          reduce using rule 55 (expression -> FALSE .)
    LBRACE          reduce using rule 55 (expression -> FALSE .)
    SEMICOLON       reduce using rule 55 (expression -> FALSE .)
    IDENTIFIER      reduce using rule 55 (expression -> FALSE .)
    TYPE            reduce using rule 55 (expression -> FALSE .)
    FOR             reduce using rule 55 (expression -> FALSE .)
    VAR             reduce using rule 55 (expression -> FALSE .)
    RBRACE          reduce using rule 55 (expression -> FALSE .)
    COMMA           reduce using rule 55 (expression -> FALSE .)


state 25

    (56) expression -> NIL .

    PLUS            reduce using rule 56 (expression -> NIL .)
    MINUS           reduce using rule 56 (expression -> NIL .)
    TIMES           reduce using rule 56 (expression -> NIL .)
    DIVIDE          reduce using rule 56 (expression -> NIL .)
    MOD             reduce using rule 56 (expression -> NIL .)
    EQ              reduce using rule 56 (expression -> NIL .)
    NEQ             reduce using rule 56 (expression -> NIL .)
    GT              reduce using rule 56 (expression -> NIL .)
    LT              reduce using rule 56 (expression -> NIL .)
    GE              reduce using rule 56 (expression -> NIL .)
    LE              reduce using rule 56 (expression -> NIL .)
    RPAREN          reduce using rule 56 (expression -> NIL .)
    LBRACE          reduce using rule 56 (expression -> NIL .)
    SEMICOLON       reduce using rule 56 (expression -> NIL .)
    IDENTIFIER      reduce using rule 56 (expression -> NIL .)
    TYPE            reduce using rule 56 (expression -> NIL .)
    FOR             reduce using rule 56 (expression -> NIL .)
    VAR             reduce using rule 56 (expression -> NIL .)
    RBRACE          reduce using rule 56 (expression -> NIL .)
    COMMA           reduce using rule 56 (expression -> NIL .)


state 26

    (62) expression -> MINUS . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 59

state 27

    (63) expression -> LPAREN . expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 61

state 28

    (40) struct_definition -> TYPE IDENTIFIER STRUCT . LBRACE struct_fields RBRACE

    LBRACE          shift and go to state 62


state 29

    (39) print_statement -> IDENTIFIER DOT IDENTIFIER . LPAREN argument_list_opt RPAREN

    LPAREN          shift and go to state 63


state 30

    (44) for_statement -> FOR shortAssignment SEMICOLON . condicion SEMICOLON expression block
    (27) condicion -> . expression comparador expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    condicion                      shift and go to state 64
    expression                     shift and go to state 15

state 31

    (45) for_statement -> FOR condicion block .

    TYPE            reduce using rule 45 (for_statement -> FOR condicion block .)
    IDENTIFIER      reduce using rule 45 (for_statement -> FOR condicion block .)
    FOR             reduce using rule 45 (for_statement -> FOR condicion block .)
    $end            reduce using rule 45 (for_statement -> FOR condicion block .)
    VAR             reduce using rule 45 (for_statement -> FOR condicion block .)
    RBRACE          reduce using rule 45 (for_statement -> FOR condicion block .)


state 32

    (27) condicion -> expression comparador . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 65

state 33

    (57) expression -> expression PLUS . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 66

state 34

    (58) expression -> expression MINUS . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 67

state 35

    (59) expression -> expression TIMES . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 68

state 36

    (60) expression -> expression DIVIDE . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 69

state 37

    (61) expression -> expression MOD . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 70

state 38

    (32) comparador -> EQ .

    NUMBER          reduce using rule 32 (comparador -> EQ .)
    IDENTIFIER      reduce using rule 32 (comparador -> EQ .)
    RUNE            reduce using rule 32 (comparador -> EQ .)
    STRING          reduce using rule 32 (comparador -> EQ .)
    RAW_STRING      reduce using rule 32 (comparador -> EQ .)
    TRUE            reduce using rule 32 (comparador -> EQ .)
    FALSE           reduce using rule 32 (comparador -> EQ .)
    NIL             reduce using rule 32 (comparador -> EQ .)
    MINUS           reduce using rule 32 (comparador -> EQ .)
    LPAREN          reduce using rule 32 (comparador -> EQ .)


state 39

    (33) comparador -> NEQ .

    NUMBER          reduce using rule 33 (comparador -> NEQ .)
    IDENTIFIER      reduce using rule 33 (comparador -> NEQ .)
    RUNE            reduce using rule 33 (comparador -> NEQ .)
    STRING          reduce using rule 33 (comparador -> NEQ .)
    RAW_STRING      reduce using rule 33 (comparador -> NEQ .)
    TRUE            reduce using rule 33 (comparador -> NEQ .)
    FALSE           reduce using rule 33 (comparador -> NEQ .)
    NIL             reduce using rule 33 (comparador -> NEQ .)
    MINUS           reduce using rule 33 (comparador -> NEQ .)
    LPAREN          reduce using rule 33 (comparador -> NEQ .)


state 40

    (34) comparador -> GT .

    NUMBER          reduce using rule 34 (comparador -> GT .)
    IDENTIFIER      reduce using rule 34 (comparador -> GT .)
    RUNE            reduce using rule 34 (comparador -> GT .)
    STRING          reduce using rule 34 (comparador -> GT .)
    RAW_STRING      reduce using rule 34 (comparador -> GT .)
    TRUE            reduce using rule 34 (comparador -> GT .)
    FALSE           reduce using rule 34 (comparador -> GT .)
    NIL             reduce using rule 34 (comparador -> GT .)
    MINUS           reduce using rule 34 (comparador -> GT .)
    LPAREN          reduce using rule 34 (comparador -> GT .)


state 41

    (35) comparador -> LT .

    NUMBER          reduce using rule 35 (comparador -> LT .)
    IDENTIFIER      reduce using rule 35 (comparador -> LT .)
    RUNE            reduce using rule 35 (comparador -> LT .)
    STRING          reduce using rule 35 (comparador -> LT .)
    RAW_STRING      reduce using rule 35 (comparador -> LT .)
    TRUE            reduce using rule 35 (comparador -> LT .)
    FALSE           reduce using rule 35 (comparador -> LT .)
    NIL             reduce using rule 35 (comparador -> LT .)
    MINUS           reduce using rule 35 (comparador -> LT .)
    LPAREN          reduce using rule 35 (comparador -> LT .)


state 42

    (36) comparador -> GE .

    NUMBER          reduce using rule 36 (comparador -> GE .)
    IDENTIFIER      reduce using rule 36 (comparador -> GE .)
    RUNE            reduce using rule 36 (comparador -> GE .)
    STRING          reduce using rule 36 (comparador -> GE .)
    RAW_STRING      reduce using rule 36 (comparador -> GE .)
    TRUE            reduce using rule 36 (comparador -> GE .)
    FALSE           reduce using rule 36 (comparador -> GE .)
    NIL             reduce using rule 36 (comparador -> GE .)
    MINUS           reduce using rule 36 (comparador -> GE .)
    LPAREN          reduce using rule 36 (comparador -> GE .)


state 43

    (37) comparador -> LE .

    NUMBER          reduce using rule 37 (comparador -> LE .)
    IDENTIFIER      reduce using rule 37 (comparador -> LE .)
    RUNE            reduce using rule 37 (comparador -> LE .)
    STRING          reduce using rule 37 (comparador -> LE .)
    RAW_STRING      reduce using rule 37 (comparador -> LE .)
    TRUE            reduce using rule 37 (comparador -> LE .)
    FALSE           reduce using rule 37 (comparador -> LE .)
    NIL             reduce using rule 37 (comparador -> LE .)
    MINUS           reduce using rule 37 (comparador -> LE .)
    LPAREN          reduce using rule 37 (comparador -> LE .)


state 44

    (19) shortAssignment -> IDENTIFIER DECLARE_ASSIGN . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 71

state 45

    (47) block -> LBRACE sentencias . RBRACE

    RBRACE          shift and go to state 72


state 46

    (48) block -> LBRACE RBRACE .

    TYPE            reduce using rule 48 (block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 48 (block -> LBRACE RBRACE .)
    FOR             reduce using rule 48 (block -> LBRACE RBRACE .)
    $end            reduce using rule 48 (block -> LBRACE RBRACE .)
    VAR             reduce using rule 48 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 48 (block -> LBRACE RBRACE .)


state 47

    (7) sentencias -> sentencia .
    (8) sentencias -> sentencia . sentencias
    (7) sentencias -> . sentencia
    (8) sentencias -> . sentencia sentencias
    (9) sentencia -> . assignment
    (10) sentencia -> . input
    (11) sentencia -> . llamarFuncion
    (12) sentencia -> . print_statement
    (13) sentencia -> . struct_definition
    (14) sentencia -> . for_statement
    (16) assignment -> . assigmentSimple
    (17) assignment -> . assignmentFuncion
    (18) assignment -> . shortAssignment
    (15) input -> . IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
    (22) llamarFuncion -> . IDENTIFIER LPAREN argument_list_opt RPAREN
    (39) print_statement -> . IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN
    (40) struct_definition -> . TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE
    (44) for_statement -> . FOR shortAssignment SEMICOLON condicion SEMICOLON expression block
    (45) for_statement -> . FOR condicion block
    (46) for_statement -> . FOR block
    (20) assigmentSimple -> . VAR IDENTIFIER DATATYPE ASSIGN expression
    (21) assignmentFuncion -> . VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion
    (19) shortAssignment -> . IDENTIFIER DECLARE_ASSIGN expression

    RBRACE          reduce using rule 7 (sentencias -> sentencia .)
    IDENTIFIER      shift and go to state 57
    TYPE            shift and go to state 7
    FOR             shift and go to state 9
    VAR             shift and go to state 58

    sentencia                      shift and go to state 47
    sentencias                     shift and go to state 73
    assignment                     shift and go to state 48
    input                          shift and go to state 49
    llamarFuncion                  shift and go to state 50
    print_statement                shift and go to state 51
    struct_definition              shift and go to state 52
    for_statement                  shift and go to state 53
    assigmentSimple                shift and go to state 54
    assignmentFuncion              shift and go to state 55
    shortAssignment                shift and go to state 56

state 48

    (9) sentencia -> assignment .

    IDENTIFIER      reduce using rule 9 (sentencia -> assignment .)
    TYPE            reduce using rule 9 (sentencia -> assignment .)
    FOR             reduce using rule 9 (sentencia -> assignment .)
    VAR             reduce using rule 9 (sentencia -> assignment .)
    RBRACE          reduce using rule 9 (sentencia -> assignment .)


state 49

    (10) sentencia -> input .

    IDENTIFIER      reduce using rule 10 (sentencia -> input .)
    TYPE            reduce using rule 10 (sentencia -> input .)
    FOR             reduce using rule 10 (sentencia -> input .)
    VAR             reduce using rule 10 (sentencia -> input .)
    RBRACE          reduce using rule 10 (sentencia -> input .)


state 50

    (11) sentencia -> llamarFuncion .

    IDENTIFIER      reduce using rule 11 (sentencia -> llamarFuncion .)
    TYPE            reduce using rule 11 (sentencia -> llamarFuncion .)
    FOR             reduce using rule 11 (sentencia -> llamarFuncion .)
    VAR             reduce using rule 11 (sentencia -> llamarFuncion .)
    RBRACE          reduce using rule 11 (sentencia -> llamarFuncion .)


state 51

    (12) sentencia -> print_statement .

    IDENTIFIER      reduce using rule 12 (sentencia -> print_statement .)
    TYPE            reduce using rule 12 (sentencia -> print_statement .)
    FOR             reduce using rule 12 (sentencia -> print_statement .)
    VAR             reduce using rule 12 (sentencia -> print_statement .)
    RBRACE          reduce using rule 12 (sentencia -> print_statement .)


state 52

    (13) sentencia -> struct_definition .

    IDENTIFIER      reduce using rule 13 (sentencia -> struct_definition .)
    TYPE            reduce using rule 13 (sentencia -> struct_definition .)
    FOR             reduce using rule 13 (sentencia -> struct_definition .)
    VAR             reduce using rule 13 (sentencia -> struct_definition .)
    RBRACE          reduce using rule 13 (sentencia -> struct_definition .)


state 53

    (14) sentencia -> for_statement .

    IDENTIFIER      reduce using rule 14 (sentencia -> for_statement .)
    TYPE            reduce using rule 14 (sentencia -> for_statement .)
    FOR             reduce using rule 14 (sentencia -> for_statement .)
    VAR             reduce using rule 14 (sentencia -> for_statement .)
    RBRACE          reduce using rule 14 (sentencia -> for_statement .)


state 54

    (16) assignment -> assigmentSimple .

    IDENTIFIER      reduce using rule 16 (assignment -> assigmentSimple .)
    TYPE            reduce using rule 16 (assignment -> assigmentSimple .)
    FOR             reduce using rule 16 (assignment -> assigmentSimple .)
    VAR             reduce using rule 16 (assignment -> assigmentSimple .)
    RBRACE          reduce using rule 16 (assignment -> assigmentSimple .)


state 55

    (17) assignment -> assignmentFuncion .

    IDENTIFIER      reduce using rule 17 (assignment -> assignmentFuncion .)
    TYPE            reduce using rule 17 (assignment -> assignmentFuncion .)
    FOR             reduce using rule 17 (assignment -> assignmentFuncion .)
    VAR             reduce using rule 17 (assignment -> assignmentFuncion .)
    RBRACE          reduce using rule 17 (assignment -> assignmentFuncion .)


state 56

    (18) assignment -> shortAssignment .

    IDENTIFIER      reduce using rule 18 (assignment -> shortAssignment .)
    TYPE            reduce using rule 18 (assignment -> shortAssignment .)
    FOR             reduce using rule 18 (assignment -> shortAssignment .)
    VAR             reduce using rule 18 (assignment -> shortAssignment .)
    RBRACE          reduce using rule 18 (assignment -> shortAssignment .)


state 57

    (15) input -> IDENTIFIER . DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
    (22) llamarFuncion -> IDENTIFIER . LPAREN argument_list_opt RPAREN
    (39) print_statement -> IDENTIFIER . DOT IDENTIFIER LPAREN argument_list_opt RPAREN
    (19) shortAssignment -> IDENTIFIER . DECLARE_ASSIGN expression

    DOT             shift and go to state 74
    LPAREN          shift and go to state 75
    DECLARE_ASSIGN  shift and go to state 44


state 58

    (20) assigmentSimple -> VAR . IDENTIFIER DATATYPE ASSIGN expression
    (21) assignmentFuncion -> VAR . IDENTIFIER DATATYPE ASSIGN llamarFuncion

    IDENTIFIER      shift and go to state 76


state 59

    (62) expression -> MINUS expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 62 (expression -> MINUS expression .)
    MINUS           reduce using rule 62 (expression -> MINUS expression .)
    TIMES           reduce using rule 62 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 62 (expression -> MINUS expression .)
    MOD             reduce using rule 62 (expression -> MINUS expression .)
    EQ              reduce using rule 62 (expression -> MINUS expression .)
    NEQ             reduce using rule 62 (expression -> MINUS expression .)
    GT              reduce using rule 62 (expression -> MINUS expression .)
    LT              reduce using rule 62 (expression -> MINUS expression .)
    GE              reduce using rule 62 (expression -> MINUS expression .)
    LE              reduce using rule 62 (expression -> MINUS expression .)
    RPAREN          reduce using rule 62 (expression -> MINUS expression .)
    LBRACE          reduce using rule 62 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 62 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 62 (expression -> MINUS expression .)
    TYPE            reduce using rule 62 (expression -> MINUS expression .)
    FOR             reduce using rule 62 (expression -> MINUS expression .)
    VAR             reduce using rule 62 (expression -> MINUS expression .)
    RBRACE          reduce using rule 62 (expression -> MINUS expression .)
    COMMA           reduce using rule 62 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]


state 60

    (50) expression -> IDENTIFIER .

    PLUS            reduce using rule 50 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 50 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 50 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 50 (expression -> IDENTIFIER .)
    MOD             reduce using rule 50 (expression -> IDENTIFIER .)
    EQ              reduce using rule 50 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 50 (expression -> IDENTIFIER .)
    GT              reduce using rule 50 (expression -> IDENTIFIER .)
    LT              reduce using rule 50 (expression -> IDENTIFIER .)
    GE              reduce using rule 50 (expression -> IDENTIFIER .)
    LE              reduce using rule 50 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 50 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 50 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 50 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 50 (expression -> IDENTIFIER .)
    TYPE            reduce using rule 50 (expression -> IDENTIFIER .)
    FOR             reduce using rule 50 (expression -> IDENTIFIER .)
    VAR             reduce using rule 50 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 50 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 50 (expression -> IDENTIFIER .)


state 61

    (63) expression -> LPAREN expression . RPAREN
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 62

    (40) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE . struct_fields RBRACE
    (42) struct_fields -> . struct_field
    (43) struct_fields -> . struct_fields struct_field
    (41) struct_field -> . IDENTIFIER DATATYPE

    IDENTIFIER      shift and go to state 78

    struct_fields                  shift and go to state 79
    struct_field                   shift and go to state 80

state 63

    (39) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN . argument_list_opt RPAREN
    (25) argument_list_opt -> . argument_list
    (26) argument_list_opt -> .
    (23) argument_list -> . expression
    (24) argument_list -> . argument_list COMMA expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 26 (argument_list_opt -> .)
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    argument_list_opt              shift and go to state 81
    argument_list                  shift and go to state 82
    expression                     shift and go to state 83

state 64

    (44) for_statement -> FOR shortAssignment SEMICOLON condicion . SEMICOLON expression block

    SEMICOLON       shift and go to state 84


state 65

    (27) condicion -> expression comparador expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    LBRACE          reduce using rule 27 (condicion -> expression comparador expression .)
    SEMICOLON       reduce using rule 27 (condicion -> expression comparador expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 66

    (57) expression -> expression PLUS expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 57 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 57 (expression -> expression PLUS expression .)
    EQ              reduce using rule 57 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 57 (expression -> expression PLUS expression .)
    GT              reduce using rule 57 (expression -> expression PLUS expression .)
    LT              reduce using rule 57 (expression -> expression PLUS expression .)
    GE              reduce using rule 57 (expression -> expression PLUS expression .)
    LE              reduce using rule 57 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 57 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 57 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 57 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 57 (expression -> expression PLUS expression .)
    FOR             reduce using rule 57 (expression -> expression PLUS expression .)
    VAR             reduce using rule 57 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 57 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 57 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37

  ! TIMES           [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]


state 67

    (58) expression -> expression MINUS expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 58 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 58 (expression -> expression MINUS expression .)
    EQ              reduce using rule 58 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 58 (expression -> expression MINUS expression .)
    GT              reduce using rule 58 (expression -> expression MINUS expression .)
    LT              reduce using rule 58 (expression -> expression MINUS expression .)
    GE              reduce using rule 58 (expression -> expression MINUS expression .)
    LE              reduce using rule 58 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 58 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 58 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 58 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 58 (expression -> expression MINUS expression .)
    FOR             reduce using rule 58 (expression -> expression MINUS expression .)
    VAR             reduce using rule 58 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 58 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 58 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37

  ! TIMES           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]


state 68

    (59) expression -> expression TIMES expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 59 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 59 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 59 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 59 (expression -> expression TIMES expression .)
    MOD             reduce using rule 59 (expression -> expression TIMES expression .)
    EQ              reduce using rule 59 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 59 (expression -> expression TIMES expression .)
    GT              reduce using rule 59 (expression -> expression TIMES expression .)
    LT              reduce using rule 59 (expression -> expression TIMES expression .)
    GE              reduce using rule 59 (expression -> expression TIMES expression .)
    LE              reduce using rule 59 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 59 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 59 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 59 (expression -> expression TIMES expression .)
    TYPE            reduce using rule 59 (expression -> expression TIMES expression .)
    FOR             reduce using rule 59 (expression -> expression TIMES expression .)
    VAR             reduce using rule 59 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 59 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 59 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]


state 69

    (60) expression -> expression DIVIDE expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 60 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 60 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 60 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 60 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 60 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 60 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 60 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 60 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 60 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 60 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 60 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 60 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 60 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 60 (expression -> expression DIVIDE expression .)
    TYPE            reduce using rule 60 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 60 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 60 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 60 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 60 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]


state 70

    (61) expression -> expression MOD expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    PLUS            reduce using rule 61 (expression -> expression MOD expression .)
    MINUS           reduce using rule 61 (expression -> expression MOD expression .)
    TIMES           reduce using rule 61 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 61 (expression -> expression MOD expression .)
    MOD             reduce using rule 61 (expression -> expression MOD expression .)
    EQ              reduce using rule 61 (expression -> expression MOD expression .)
    NEQ             reduce using rule 61 (expression -> expression MOD expression .)
    GT              reduce using rule 61 (expression -> expression MOD expression .)
    LT              reduce using rule 61 (expression -> expression MOD expression .)
    GE              reduce using rule 61 (expression -> expression MOD expression .)
    LE              reduce using rule 61 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 61 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 61 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression MOD expression .)
    IDENTIFIER      reduce using rule 61 (expression -> expression MOD expression .)
    TYPE            reduce using rule 61 (expression -> expression MOD expression .)
    FOR             reduce using rule 61 (expression -> expression MOD expression .)
    VAR             reduce using rule 61 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 61 (expression -> expression MOD expression .)
    COMMA           reduce using rule 61 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]


state 71

    (19) shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    SEMICOLON       reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    IDENTIFIER      reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    TYPE            reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    FOR             reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    VAR             reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 19 (shortAssignment -> IDENTIFIER DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 72

    (47) block -> LBRACE sentencias RBRACE .

    TYPE            reduce using rule 47 (block -> LBRACE sentencias RBRACE .)
    IDENTIFIER      reduce using rule 47 (block -> LBRACE sentencias RBRACE .)
    FOR             reduce using rule 47 (block -> LBRACE sentencias RBRACE .)
    $end            reduce using rule 47 (block -> LBRACE sentencias RBRACE .)
    VAR             reduce using rule 47 (block -> LBRACE sentencias RBRACE .)
    RBRACE          reduce using rule 47 (block -> LBRACE sentencias RBRACE .)


state 73

    (8) sentencias -> sentencia sentencias .

    RBRACE          reduce using rule 8 (sentencias -> sentencia sentencias .)


state 74

    (15) input -> IDENTIFIER DOT . IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN
    (39) print_statement -> IDENTIFIER DOT . IDENTIFIER LPAREN argument_list_opt RPAREN

    IDENTIFIER      shift and go to state 85


state 75

    (22) llamarFuncion -> IDENTIFIER LPAREN . argument_list_opt RPAREN
    (25) argument_list_opt -> . argument_list
    (26) argument_list_opt -> .
    (23) argument_list -> . expression
    (24) argument_list -> . argument_list COMMA expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 26 (argument_list_opt -> .)
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    argument_list_opt              shift and go to state 86
    argument_list                  shift and go to state 82
    expression                     shift and go to state 83

state 76

    (20) assigmentSimple -> VAR IDENTIFIER . DATATYPE ASSIGN expression
    (21) assignmentFuncion -> VAR IDENTIFIER . DATATYPE ASSIGN llamarFuncion

    DATATYPE        shift and go to state 87


state 77

    (63) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 63 (expression -> LPAREN expression RPAREN .)


state 78

    (41) struct_field -> IDENTIFIER . DATATYPE

    DATATYPE        shift and go to state 88


state 79

    (40) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields . RBRACE
    (43) struct_fields -> struct_fields . struct_field
    (41) struct_field -> . IDENTIFIER DATATYPE

    RBRACE          shift and go to state 89
    IDENTIFIER      shift and go to state 78

    struct_field                   shift and go to state 90

state 80

    (42) struct_fields -> struct_field .

    RBRACE          reduce using rule 42 (struct_fields -> struct_field .)
    IDENTIFIER      reduce using rule 42 (struct_fields -> struct_field .)


state 81

    (39) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt . RPAREN

    RPAREN          shift and go to state 91


state 82

    (25) argument_list_opt -> argument_list .
    (24) argument_list -> argument_list . COMMA expression

    RPAREN          reduce using rule 25 (argument_list_opt -> argument_list .)
    COMMA           shift and go to state 92


state 83

    (23) argument_list -> expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    COMMA           reduce using rule 23 (argument_list -> expression .)
    RPAREN          reduce using rule 23 (argument_list -> expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 84

    (44) for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON . expression block
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 93

state 85

    (15) input -> IDENTIFIER DOT IDENTIFIER . LPAREN AMPERSAND IDENTIFIER RPAREN
    (39) print_statement -> IDENTIFIER DOT IDENTIFIER . LPAREN argument_list_opt RPAREN

    LPAREN          shift and go to state 94


state 86

    (22) llamarFuncion -> IDENTIFIER LPAREN argument_list_opt . RPAREN

    RPAREN          shift and go to state 95


state 87

    (20) assigmentSimple -> VAR IDENTIFIER DATATYPE . ASSIGN expression
    (21) assignmentFuncion -> VAR IDENTIFIER DATATYPE . ASSIGN llamarFuncion

    ASSIGN          shift and go to state 96


state 88

    (41) struct_field -> IDENTIFIER DATATYPE .

    RBRACE          reduce using rule 41 (struct_field -> IDENTIFIER DATATYPE .)
    IDENTIFIER      reduce using rule 41 (struct_field -> IDENTIFIER DATATYPE .)


state 89

    (40) struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .

    TYPE            reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    IDENTIFIER      reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    FOR             reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    $end            reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    VAR             reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)
    RBRACE          reduce using rule 40 (struct_definition -> TYPE IDENTIFIER STRUCT LBRACE struct_fields RBRACE .)


state 90

    (43) struct_fields -> struct_fields struct_field .

    RBRACE          reduce using rule 43 (struct_fields -> struct_fields struct_field .)
    IDENTIFIER      reduce using rule 43 (struct_fields -> struct_fields struct_field .)


state 91

    (39) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .

    TYPE            reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)
    IDENTIFIER      reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)
    FOR             reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)
    $end            reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)
    VAR             reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)
    RBRACE          reduce using rule 39 (print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN argument_list_opt RPAREN .)


state 92

    (24) argument_list -> argument_list COMMA . expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 97

state 93

    (44) for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression . block
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression
    (47) block -> . LBRACE sentencias RBRACE
    (48) block -> . LBRACE RBRACE

    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LBRACE          shift and go to state 18

    block                          shift and go to state 98

state 94

    (15) input -> IDENTIFIER DOT IDENTIFIER LPAREN . AMPERSAND IDENTIFIER RPAREN
    (39) print_statement -> IDENTIFIER DOT IDENTIFIER LPAREN . argument_list_opt RPAREN
    (25) argument_list_opt -> . argument_list
    (26) argument_list_opt -> .
    (23) argument_list -> . expression
    (24) argument_list -> . argument_list COMMA expression
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN

    AMPERSAND       shift and go to state 99
    RPAREN          reduce using rule 26 (argument_list_opt -> .)
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 60
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    argument_list_opt              shift and go to state 81
    argument_list                  shift and go to state 82
    expression                     shift and go to state 83

state 95

    (22) llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .

    IDENTIFIER      reduce using rule 22 (llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .)
    TYPE            reduce using rule 22 (llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .)
    FOR             reduce using rule 22 (llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .)
    VAR             reduce using rule 22 (llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .)
    RBRACE          reduce using rule 22 (llamarFuncion -> IDENTIFIER LPAREN argument_list_opt RPAREN .)


state 96

    (20) assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN . expression
    (21) assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN . llamarFuncion
    (49) expression -> . NUMBER
    (50) expression -> . IDENTIFIER
    (51) expression -> . RUNE
    (52) expression -> . STRING
    (53) expression -> . RAW_STRING
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . NIL
    (57) expression -> . expression PLUS expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression DIVIDE expression
    (61) expression -> . expression MOD expression
    (62) expression -> . MINUS expression
    (63) expression -> . LPAREN expression RPAREN
    (22) llamarFuncion -> . IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 100
    RUNE            shift and go to state 20
    STRING          shift and go to state 21
    RAW_STRING      shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NIL             shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 101
    llamarFuncion                  shift and go to state 102

state 97

    (24) argument_list -> argument_list COMMA expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    COMMA           reduce using rule 24 (argument_list -> argument_list COMMA expression .)
    RPAREN          reduce using rule 24 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 98

    (44) for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .

    TYPE            reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)
    IDENTIFIER      reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)
    FOR             reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)
    $end            reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)
    VAR             reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)
    RBRACE          reduce using rule 44 (for_statement -> FOR shortAssignment SEMICOLON condicion SEMICOLON expression block .)


state 99

    (15) input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 103


state 100

    (50) expression -> IDENTIFIER .
    (22) llamarFuncion -> IDENTIFIER . LPAREN argument_list_opt RPAREN

    PLUS            reduce using rule 50 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 50 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 50 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 50 (expression -> IDENTIFIER .)
    MOD             reduce using rule 50 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 50 (expression -> IDENTIFIER .)
    TYPE            reduce using rule 50 (expression -> IDENTIFIER .)
    FOR             reduce using rule 50 (expression -> IDENTIFIER .)
    VAR             reduce using rule 50 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 50 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 75


state 101

    (20) assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .
    (57) expression -> expression . PLUS expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . DIVIDE expression
    (61) expression -> expression . MOD expression

    IDENTIFIER      reduce using rule 20 (assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .)
    TYPE            reduce using rule 20 (assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .)
    FOR             reduce using rule 20 (assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .)
    VAR             reduce using rule 20 (assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .)
    RBRACE          reduce using rule 20 (assigmentSimple -> VAR IDENTIFIER DATATYPE ASSIGN expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37


state 102

    (21) assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .

    IDENTIFIER      reduce using rule 21 (assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .)
    TYPE            reduce using rule 21 (assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .)
    FOR             reduce using rule 21 (assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .)
    VAR             reduce using rule 21 (assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .)
    RBRACE          reduce using rule 21 (assignmentFuncion -> VAR IDENTIFIER DATATYPE ASSIGN llamarFuncion .)


state 103

    (15) input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER . RPAREN

    RPAREN          shift and go to state 104


state 104

    (15) input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .

    IDENTIFIER      reduce using rule 15 (input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .)
    TYPE            reduce using rule 15 (input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .)
    FOR             reduce using rule 15 (input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .)
    VAR             reduce using rule 15 (input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 15 (input -> IDENTIFIER DOT IDENTIFIER LPAREN AMPERSAND IDENTIFIER RPAREN .)

